<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MyFirstArticle</title>
    <url>/2020/04/28/MyFirstArticle/</url>
    <content><![CDATA[<h2 id="我的第一篇文章"><a href="#我的第一篇文章" class="headerlink" title="我的第一篇文章"></a>我的第一篇文章</h2><p><code>Hello Word</code></p>
<p><img src="/2020/04/28/MyFirstArticle/1.jpg" alt="1"><br>这是超链接 &nbsp;<a href="https://www.baidu.com/" target="_blank" rel="noopener">百度一下</a></p>
<p>hexo命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#新建博客</span><br><span class="line">hexo new blogname</span><br><span class="line"></span><br><span class="line">#重新生成</span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">#上传到GitHub</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>hexo d部署后总需要重新改域名问题</title>
    <url>/2020/04/28/hexod/</url>
    <content><![CDATA[<h2 id="1-在source目录下（不是hexo根目录下），创建一个CNAME文件，可以用sublime创建，然后保存成（All-files格式）"><a href="#1-在source目录下（不是hexo根目录下），创建一个CNAME文件，可以用sublime创建，然后保存成（All-files格式）" class="headerlink" title="1.在source目录下（不是hexo根目录下），创建一个CNAME文件，可以用sublime创建，然后保存成（All files格式）"></a>1.在source目录下（不是hexo根目录下），创建一个CNAME文件，可以用sublime创建，然后保存成（All files格式）</h2><p>&emsp;</p>
<h2 id="2-CNAME文件里写自己的域名"><a href="#2-CNAME文件里写自己的域名" class="headerlink" title="2.CNAME文件里写自己的域名"></a>2.CNAME文件里写自己的域名</h2><p><img src="/2020/04/28/hexod/cname.png" alt="cname"></p>
<h2 id="3-hexo-g-重新生成一下"><a href="#3-hexo-g-重新生成一下" class="headerlink" title="3.hexo g 重新生成一下"></a>3.hexo g 重新生成一下</h2><p>&emsp;</p>
<h2 id="4-hexo-d-部署到github上"><a href="#4-hexo-d-部署到github上" class="headerlink" title="4.hexo d 部署到github上"></a>4.hexo d 部署到github上</h2><p>&emsp;</p>
<h2 id="5-完成"><a href="#5-完成" class="headerlink" title="5.完成"></a>5.完成</h2>]]></content>
  </entry>
  <entry>
    <title>hexo插入图片不能显示</title>
    <url>/2020/04/28/photoerror/</url>
    <content><![CDATA[<h4 id="1-安装插件-deyiBlog根目录打开Git-Bash"><a href="#1-安装插件-deyiBlog根目录打开Git-Bash" class="headerlink" title="1.安装插件(deyiBlog根目录打开Git Bash)"></a>1.安装插件(deyiBlog根目录打开Git Bash)</h4><p><code>npm install hexo-asset-image --save</code></p>
<h4 id="2-修改配置文件-config-yml的-post-asset-folder，false改为true"><a href="#2-修改配置文件-config-yml的-post-asset-folder，false改为true" class="headerlink" title="2.修改配置文件_config.yml的 post_asset_folder，false改为true"></a>2.修改配置文件_config.yml的 post_asset_folder，false改为true</h4><p>&emsp;</p>
<h4 id="3-更改-node-modules-hexo-asset-image-index-js的代码"><a href="#3-更改-node-modules-hexo-asset-image-index-js的代码" class="headerlink" title="3.更改/node_modules/hexo-asset-image/index.js的代码"></a>3.更改/node_modules/hexo-asset-image/index.js的代码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39;use strict&#39;;</span><br><span class="line">var cheerio &#x3D; require(&#39;cheerio&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;14480345&#x2F;how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line">function getPosition(str, m, i) &#123;</span><br><span class="line">  return str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version &#x3D; String(hexo.version).split(&#39;.&#39;);</span><br><span class="line">hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;</span><br><span class="line">  var config &#x3D; hexo.config;</span><br><span class="line">  if(config.post_asset_folder)&#123;</span><br><span class="line">        var link &#x3D; data.permalink;</span><br><span class="line">    if(version.length &gt; 0 &amp;&amp; Number(version[0]) &#x3D;&#x3D; 3)</span><br><span class="line">       var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 1) + 1;</span><br><span class="line">    else</span><br><span class="line">       var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 3) + 1;</span><br><span class="line">    &#x2F;&#x2F; In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;...&#x2F;about&#x2F;index.html&quot;.</span><br><span class="line">    var endPos &#x3D; link.lastIndexOf(&#39;&#x2F;&#39;) + 1;</span><br><span class="line">    link &#x3D; link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess &#x3D; [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];</span><br><span class="line">    for(var i &#x3D; 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key &#x3D; toprocess[i];</span><br><span class="line"> </span><br><span class="line">      var $ &#x3D; cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: false,</span><br><span class="line">        xmlMode: false,</span><br><span class="line">        lowerCaseTags: false,</span><br><span class="line">        decodeEntities: false</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(&#39;img&#39;).each(function()&#123;</span><br><span class="line">        if ($(this).attr(&#39;src&#39;))&#123;</span><br><span class="line">            &#x2F;&#x2F; For windows style path, we replace &#39;\&#39; to &#39;&#x2F;&#39;.</span><br><span class="line">            var src &#x3D; $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;&#x2F;&#39;);</span><br><span class="line">            if(!&#x2F;http[s]*.*|\&#x2F;\&#x2F;.*&#x2F;.test(src) &amp;&amp;</span><br><span class="line">               !&#x2F;^\s*\&#x2F;&#x2F;.test(src)) &#123;</span><br><span class="line">              &#x2F;&#x2F; For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.</span><br><span class="line">              &#x2F;&#x2F; In addition, to support multi-level local directory.</span><br><span class="line">              var linkArray &#x3D; link.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">                return elem !&#x3D; &#39;&#39;;</span><br><span class="line">              &#125;);</span><br><span class="line">              var srcArray &#x3D; src.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">                return elem !&#x3D; &#39;&#39; &amp;&amp; elem !&#x3D; &#39;.&#39;;</span><br><span class="line">              &#125;);</span><br><span class="line">              if(srcArray.length &gt; 1)</span><br><span class="line">                srcArray.shift();</span><br><span class="line">              src &#x3D; srcArray.join(&#39;&#x2F;&#39;);</span><br><span class="line">              $(this).attr(&#39;src&#39;, config.root + link + src);</span><br><span class="line">              console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span><br><span class="line">            console.info&amp;&amp;console.info($(this));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] &#x3D; $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="4-提交就好了"><a href="#4-提交就好了" class="headerlink" title="4.提交就好了"></a>4.提交就好了</h3>]]></content>
  </entry>
  <entry>
    <title>今天的太阳</title>
    <url>/2020/04/29/sun/</url>
    <content><![CDATA[<p><img src="/2020/04/29/sun/sun1.jpg" alt="sun1"><br><img src="/2020/04/29/sun/sun2.jpg" alt="sun2"><br><img src="/2020/04/29/sun/sun3.jpg" alt="sun3"></p>
]]></content>
  </entry>
</search>
